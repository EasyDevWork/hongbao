apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'kotlinx-serialization'

apply from: 'tinker-support.gradle'

def defaultPropertiesFile = rootProject.file("buildsystem/default.properties")
def defaultProperties = new Properties()
defaultProperties.load(new FileInputStream(defaultPropertiesFile))

def keystorePropertiesFile = rootProject.file("buildsystem/keystore.properties")
if (keystorePropertiesFile.exists()) {
    defaultProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {

        release {
            keyAlias defaultProperties['keyAlias']
            keyPassword defaultProperties['keyPassword']
            storeFile file(defaultProperties['storeFile'])
            storePassword defaultProperties['storePassword']
        }
    }
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.carlos.grabredenvelope"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 8
        versionName "2.1.0"
        flavorDimensions "8" //和versionCode相同
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : defaultProperties.getProperty('JPUSH_APPKEY'), //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


    //多渠道打包
    productFlavors {
        dev {          //开发测试版本
            buildConfigField("String", "BUGLY_KEY_DEV", "\"${defaultProperties['BUGLY_KEY_DEV']}\"")
            buildConfigField("String", "UMENG_APPKEY_DEV", "\"${defaultProperties['UMENG_APPKEY_DEV']}\"")

        }
        production {   //正式发布版本
            buildConfigField("String", "BUGLY_KEY", "\"${defaultProperties['BUGLY_KEY']}\"")
            buildConfigField("String", "UMENG_APPKEY", "\"${defaultProperties['UMENG_APPKEY']}\"")
        }
    }

}

//修改APK名字
android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "GrabRedEnvelope${versionName}.apk"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'

    implementation 'com.github.xbdcc:cutils:0.0.18'

    //jpush
    implementation 'cn.jiguang.sdk:jpush:3.3.2'
    implementation 'cn.jiguang.sdk:jcore:2.1.0'

    //umeng
    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'

    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.0'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation "com.android.support:multidex:1.0.3"


}
repositories {
    mavenCentral()
}


